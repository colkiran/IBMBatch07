Topics for the day
------------------
1. operators 

2. Data types

3. loops and control structures

4. strings




Coding Rules
------------
1. Comments

   a. # - single line comment

   b. """ or ''' for multiple line comments


Indentation (tab space)
-----------------------
we don't use { } brackets for 
 
   a. loops
   b. if conditions
   c. functions
   d. classes

function fun() 
{

   function body

}


def fun():
   # function code
   for i in range(1, 31):
       # for loop code
       print(i)
  
       print("world")     # will get printed 30

   print("hello")	  # will get printed once
   

---------------------------------------------------------------------
Variables
---------

frt1 = 'Apple'
frt2 = 'Orange'

print(f"{frt1} is costlier than {frt2}")
prc = 385
wgt = 5
print(f"{frt1} is {prc} per kg and we get a discount of 20% if we buy more than 3 kgs {prc * wgt * 0.8}")


Primitive Data types
--------------------
1. Numbers
  a. integers
  b. float
  c. complex 
2. Strings
3. Boolean

Operators
---------
1. Arithmetic
2. Augmentor  - +=
3. Comparison
4. Logical
5. Bitwise
6. Ternary

Bitwise
--------
OR
---
binary - 5 = 0101
         3 = 0011
             ----
             0111
             ----

AND
---
5 = 0101
3 = 0011
    ----
    0001
    ----

XOR 
---
1 ^ 0 = 1
0 ^ 1 = 1
0 ^ 0 = 0
1 ^ 1 = 0

5 = 0101
3 = 0011
    ----
    0110
    ---- 

left shift
----------
5 << 1
0101 << 1  = 1010 = 10

8 = 1000
8 << 1
1000 << 1 = 10000 = 16

5 << 2
0101 << 2 = 10100 

16 >> 1
10000 >> 1 = 1000 = 8

5 >> 1
0101 >> 1 = 0010 = 2

Loops and Control structures
----------------------------

control Structures
-------------------
if condition 

Loops
-----
1. for loop
2. while loop


for loop 
--------
it has every thing as a part of its syntax

1. initialization
2. incremental
3. no of iterations (condition)

for loop in python is same as foreach loop, they depend on a collection of objects

for i in range(1, 10):

range function will generate numbers that the for loop depends

a. continue
b. break
c. else


print function
--------------
print(data, sep=, end="\n")


problems
--------
1. print this pattern


1 2 3 4 5
 1 2 3 4
  1 2 3
   1 2
    1
   2 1
  3 2 1
 4 3 2 1
5 4 3 2 1

2. print all prime numbers between 150 and 50 and also print the count of it


Strings
-------

STRINGS ARE IMMUTABLE
---------------------

strings in python are enclosed in "" or ''

st = "hello world"




Assignment
----------
patterns
--------
1
23
456
78910


1
22
333
4444
55555


    1
   1 2
  1 2 3
 1 2 3 4
1 2 3 4 5
 1 2 3 4
  1 2 3
   1 2
    1


accept a number and display the no of times each digit is occurring

32409823482









